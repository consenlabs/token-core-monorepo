// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id("io.github.gradle-nexus.publish-plugin") version "1.3.0"
    id("maven-publish")
    id("signing")
}

version System.getenv("VERSION") ?: project['version']
group 'io.github.consenlabs.android'

afterEvaluate {
    publishing {
        publications {
            Production(MavenPublication) {
                artifact("tokencore/build/outputs/aar/tokencore-release.aar")

                groupId this.group
                artifactId 'token-core'
                version this.version

                pom {
                    name = "token-core"
                    description = "a android library for web3"
                    url = "https://github.com/consenlabs/token-core-monorepo"
                    licenses {
                        license {
                            name = "Apache License 2.0"
                            url = "https://github.com/consenlabs/token-core-monorepo/blob/main/LICENSE"
                        }
                    }
                    developers {
                        developer {
                            id = "consenlabs"
                            name = "Consenlabs"
                            email = "xuyunzhao@token.im"
                        }
                    }
                    scm {
                        connection = "scm:git:github.com/consenlabs/token-core-monorepo"
                        developerConnection = "scm:git:github.com/consenlabs/token-core-monorepo"
                        url = "https://github.com/consenlabs/token-core-monorepo"
                    }
                }

            }
        }
    }

    signing {
        //make signing required unless for SNAPSHOT releases or if signing is explicitly skipped
        required { !project.version.endsWith("-SNAPSHOT") && !project.hasProperty("skipSigning") }

        //look for property 'signingKey'
        if (project.findProperty("signingKey")) {
            //If required, read a sub-key specified by its ID in property signingKeyId
            //def signingKeyId = findProperty("signingKeyId")
            //read property 'signingKey'
            def signingKey = findProperty("signingKey")
            //read property 'signingPassword'
            def signingPassword = findProperty("signingPassword")
            //Select to use in-memory ascii-armored keys
            useInMemoryPgpKeys(signingKey, signingPassword)
            //Only if also using signingKeyId
            //useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)

            //Apply signing to publication identity 'publishing.publications.maven'
            sign publishing.publications.Production
        } else {
            sign publishing.publications.Production
            // println 'WARNING: No property \'signingKey\' found. Artifact signing will be skipped.'
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}
