name: Build Release IOS

on:
  push:
    tags:
    - 'v*'

env:
  CARGO_TERM_COLOR: always
  
jobs:

  build:
    name: build release
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.rustup
          target
        key: macos-latest-nightly

    - name: Install Rust
      run: |
        rustup toolchain install nightly-2022-10-31
        rustup default nightly-2022-10-31-x86_64-apple-darwin
        rustup target add aarch64-apple-ios x86_64-apple-ios
        rustup show
        cargo install cargo-lipo
        brew install protobuf

    - name: Build And Publish
      run: | 
        pushd ./ikc
        cargo lipo --release --targets aarch64-apple-ios x86_64-apple-ios
        cbindgen ./src/lib.rs -l c > ${{github.workspace}}/target/connector.h
        popd
        
        pushd ./tcx
        cargo lipo --release --targets aarch64-apple-ios x86_64-apple-ios
        cbindgen ./src/lib.rs -l c > ${{github.workspace}}/target/tcx.h
        popd
        
        LIBS_IKC=./mobile-sdk/imKeyCoreX/imKeyCoreX
        LIBS_TCX=./tcx-examples/TokenCoreX/TokenCoreX
        cp ./target/universal/release/libconnector.a $LIBS_IKC/libconnector.a
        cp ./target/universal/release/libtcx.a $LIBS_TCX/libtcx.a
        cp ./target/connector.h $LIBS_IKC/connector.h
        cp ./target/tcx.h $LIBS_TCX/tcx.h
        if [ -d "./ios-release" ]; then
          rm -rf ./ios-release
        fi
        
        BUILD_DIR=./Products
        BUILD_ROOT=./Products
        SYMROOT=./Products
        BUILD_PRODUCTS=./Products
        CONFIGURATION=Release
        PROJECT_NAME_IKC=imKeyCoreX
        PROJECT_NAME_TCX=TokenCoreX
        
        pushd ./mobile-sdk/imKeyCoreX        
        mkdir -p $BUILD_DIR
        UNIVERSAL_OUTPUTFOLDER=$BUILD_DIR/$CONFIGURATION-Universal
        mkdir -p $UNIVERSAL_OUTPUTFOLDER
 
        xcodebuild -target $PROJECT_NAME_IKC ONLY_ACTIVE_ARCH=NO -configuration $CONFIGURATION -sdk iphoneos BUILD_DIR=$BUILD_DIR BUILD_ROOT=$BUILD_ROOT build
        xcodebuild -target $PROJECT_NAME_IKC -configuration Debug -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO BUILD_DIR=$BUILD_DIR BUILD_ROOT=$BUILD_ROOT EXCLUDED_ARCHS=arm64 build      
        cp -R $BUILD_DIR/$CONFIGURATION-iphoneos/$PROJECT_NAME_IKC.framework $UNIVERSAL_OUTPUTFOLDER/
        lipo -create -output $UNIVERSAL_OUTPUTFOLDER/$PROJECT_NAME_IKC.framework/$PROJECT_NAME_IKC $BUILD_PRODUCTS/Debug-iphonesimulator/$PROJECT_NAME_IKC.framework/$PROJECT_NAME_IKC $BUILD_DIR/$CONFIGURATION-iphoneos/$PROJECT_NAME_IKC.framework/$PROJECT_NAME_IKC
        
        cp -R $UNIVERSAL_OUTPUTFOLDER/ ../../ios-release
        rm -rf $UNIVERSAL_OUTPUTFOLDER 
        popd
        
        pushd ios-release
        TAG_NAME=${{ github.ref }}
        VERSION_NAME=${TAG_NAME: 11}
        PACKAGE_NAME=ios-release-v$VERSION_NAME.zip
        zip -q -r $PACKAGE_NAME .
        curl -v -u ${{secrets.NEXUS_USER}}:${{secrets.NEXUS_PASSWORD}} --upload-file $PACKAGE_NAME https://nexus.token.im/repository/im-releases/im/imkey/ios/$VERSION_NAME/$PACKAGE_NAME
        popd
        
        if [ -d "./ios-release" ]; then
          rm -rf ./ios-release
        fi
        pushd ./tcx-examples/TokenCoreX       
        mkdir -p $BUILD_DIR
        UNIVERSAL_OUTPUTFOLDER=$BUILD_DIR/$CONFIGURATION-Universal
        mkdir -p $UNIVERSAL_OUTPUTFOLDER
 
        xcodebuild -target $PROJECT_NAME_TCX ONLY_ACTIVE_ARCH=NO -configuration $CONFIGURATION -sdk iphoneos BUILD_DIR=$BUILD_DIR BUILD_ROOT=$BUILD_ROOT build
        xcodebuild -target $PROJECT_NAME_TCX -configuration Debug -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO BUILD_DIR=$BUILD_DIR BUILD_ROOT=$BUILD_ROOT EXCLUDED_ARCHS=arm64 build      
        cp -R $BUILD_DIR/$CONFIGURATION-iphoneos/$PROJECT_NAME_TCX.framework $UNIVERSAL_OUTPUTFOLDER/
        lipo -create -output $UNIVERSAL_OUTPUTFOLDER/$PROJECT_NAME_TCX.framework/$PROJECT_NAME_TCX $BUILD_PRODUCTS/Debug-iphonesimulator/$PROJECT_NAME_TCX.framework/$PROJECT_NAME_TCX $BUILD_DIR/$CONFIGURATION-iphoneos/$PROJECT_NAME_TCX.framework/$PROJECT_NAME_TCX
        
        cp -R $UNIVERSAL_OUTPUTFOLDER/ ../../ios-release
        rm -rf $UNIVERSAL_OUTPUTFOLDER 
        popd
        
        pushd ios-release
        TAG_NAME=${{ github.ref }}
        VERSION_NAME=${TAG_NAME: 11}
        PACKAGE_NAME=ios-release-v$VERSION_NAME.zip
        zip -q -r $PACKAGE_NAME .
        curl -v -u ${{secrets.NEXUS_USER}}:${{secrets.NEXUS_PASSWORD}} --upload-file $PACKAGE_NAME https://nexus.token.im/repository/im-releases/com/consenlabs/ios/$VERSION_NAME/$PACKAGE_NAME
        popd
        
