syntax = "proto3";
package api;

import "google/protobuf/any.proto";

message InitTokenCoreXParam {
    string fileDir = 1;
    string xpubCommonKey = 2;
    string xpubCommonIv = 3;
}

/// Hd Store
message HdStoreCreateParam {
    string password = 1;
    string passwordHint = 2;
    string name = 3;
}


message HdStoreImportParam {
    string chainType = 1;
    string mnemonic = 2;
    string password = 3;
    string path = 4;
    string source = 5;
    string name = 6;
    string network = 7;
    string segWit = 8;
    string passwordHint = 9;
    bool overwrite = 10;
}

message HdStoreDeriveParam {
    string id = 1;
    string password = 2;
    message Derivation {
        string chainType = 1;
        string path = 2;
        string network = 3;
        string segWit = 4;
        string chainId = 5;
    }
    repeated Derivation derivations= 3;
}



message BtcForkDeriveExtraParam {
    string network = 1;
    string segWit = 2;
}

message AccountResponse {
    string chainType = 1;
    string address = 2;
    string path = 3;
    string extendedXpubKey = 4;
}

message AccountsResponse {
    repeated AccountResponse accounts = 1;
}

message HdStoreExtendedPublicKeyParam {
    string id = 1;
    string password = 2;
    string chainType = 3;
    string address = 4;
}

message HdStoreExtendedPublicKeyResponse {
    string extendedPublicKey = 1;
}

message KeystoreCommonAccountsParam{
    string id = 1;
}

/// Private key store
message PrivateKeyStoreImportParam {
    string privateKey = 1;
    string password = 2;
    string chainType = 3;
    string network = 4;
    string segWit = 5;

    bool overwrite = 10;
}

message PrivateKeyStoreExportParam {
    string id = 1;
    string password = 2;
    string chainType = 3;
    string network = 4;
}

/// Keystore Common
message WalletKeyParam {
    string id = 1;
    string password = 2;
}


message KeystoreCommonExistsParam {
    KeyType type = 1;
    string value = 2;
}

message KeystoreCommonExportResult {
    string id = 1;
    KeyType type = 2;
    string value = 3;
}

enum KeyType {
    MNEMONIC = 0;
    PRIVATE_KEY = 1;
}

message KeystoreCommonExistsResult {
    bool isExists = 1;
    string id = 2;
}

/// Sign Transaction
message SignParam {
    string id = 1;
    string password = 2;
    string chainType = 3;
    string address = 4;
    google.protobuf.Any input = 5;
}

message WalletResult {
    string id = 1;
    string name = 2;
    string source = 3;
    repeated AccountResponse accounts = 4;
    int64 createdAt = 5;
}


// btc-fork
message ExternalAddressParam {
    string id = 1;
    string chainType = 2;
    uint32 externalIdx = 3;
}

message ExternalAddressResult {
    string address = 1;
    string derivedPath = 2;
    string type = 3;
}

message ExternalAddressExtra {
    string encXpub = 1;
    message ExternalAddress {
        string address = 1;
        string derivedPath = 2;
        string type = 3;
    }
    ExternalAddress externalAddress = 2;
}
